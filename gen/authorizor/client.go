// Code generated by goa v3.5.5, DO NOT EDIT.
//
// authorizor client
//
// Command:
// $ goa gen github.com/vinhphuctadang/authorizor/design

package authorizor

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "authorizor" service client.
type Client struct {
	RegisterEndpoint goa.Endpoint
	PingEndpoint     goa.Endpoint
}

// NewClient initializes a "authorizor" service client given the endpoints.
func NewClient(register, ping goa.Endpoint) *Client {
	return &Client{
		RegisterEndpoint: register,
		PingEndpoint:     ping,
	}
}

// Register calls the "register" endpoint of the "authorizor" service.
func (c *Client) Register(ctx context.Context, p *RegisterPayload) (res *RegisterResult, err error) {
	var ires interface{}
	ires, err = c.RegisterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*RegisterResult), nil
}

// Ping calls the "ping" endpoint of the "authorizor" service.
func (c *Client) Ping(ctx context.Context) (res *PingResult, err error) {
	var ires interface{}
	ires, err = c.PingEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*PingResult), nil
}
