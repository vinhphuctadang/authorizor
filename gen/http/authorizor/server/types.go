// Code generated by goa v3.5.5, DO NOT EDIT.
//
// authorizor HTTP server types
//
// Command:
// $ goa gen github.com/vinhphuctadang/authorizor/design

package server

import (
	authorizor "github.com/vinhphuctadang/authorizor/gen/authorizor"
	goa "goa.design/goa/v3/pkg"
)

// RegisterRequestBody is the type of the "authorizor" service "register"
// endpoint HTTP request body.
type RegisterRequestBody struct {
	// username
	Username *string `form:"username,omitempty" json:"username,omitempty" xml:"username,omitempty"`
	// password
	Password *string `form:"password,omitempty" json:"password,omitempty" xml:"password,omitempty"`
}

// NewRegisterPayload builds a authorizor service register endpoint payload.
func NewRegisterPayload(body *RegisterRequestBody) *authorizor.RegisterPayload {
	v := &authorizor.RegisterPayload{
		Username: *body.Username,
		Password: *body.Password,
	}

	return v
}

// ValidateRegisterRequestBody runs the validations defined on
// RegisterRequestBody
func ValidateRegisterRequestBody(body *RegisterRequestBody) (err error) {
	if body.Username == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("username", "body"))
	}
	if body.Password == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("password", "body"))
	}
	return
}
